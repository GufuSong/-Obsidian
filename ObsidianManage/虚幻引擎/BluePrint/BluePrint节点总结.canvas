{
	"nodes":[
		{"id":"90160c9aab2e742d","type":"group","x":400,"y":1200,"width":1720,"height":2340,"label":"BP"},
		{"id":"3e4bac57b075e671","type":"text","text":"`Get Time Range`获取时间轴\n","x":1211,"y":3100,"width":329,"height":80,"color":"1"},
		{"id":"3c3333dde0739f85","type":"text","text":"`Get Owner`获取所有者\n- **返回当前对象的 Owner（所属 Actor）**\n    \n    - 如果当前对象是一个 **`Actor`**，它的 `Owner` 通常是另一个 `Actor`（例如，一个武器 Actor 的 Owner 可能是持有它的角色）。\n        \n    - 如果当前对象是一个 **`Component`**（如 `SceneComponent`、`StaticMeshComponent` 等），它的 `Owner` 是它所属的 `Actor`。\n        \n- **默认情况下**：\n    \n    - `Actor` 的 `Owner` 通常是生成（Spawn）它的 `Actor`（例如，玩家发射的子弹，其 Owner 是玩家角色）。\n        \n    - `Component` 的 `Owner` 是它附加到的 `Actor`。","x":1211,"y":2620,"width":476,"height":420,"color":"1"},
		{"id":"3f1a306cf9bb1eb4","type":"text","text":"`Get All Actors Of Class`获取继承自同一基类的派生类\n\n**一. 原理 :**\n- 遍历Level 中的所有蓝图 ,  并检测他的基类 .\n\n**二. 注意 :**\n- 此节点消耗较高, 谨慎使用 .","x":1211,"y":2360,"width":476,"height":215,"color":"1"},
		{"id":"056ac6ab6b839fe2","type":"text","text":"Get","x":646,"y":2440,"width":250,"height":60},
		{"id":"01f98db2af9adda9","type":"text","text":"`Get World Delta Seconds`获取Delta Time\n","x":1720,"y":2362,"width":380,"height":108,"color":"1"},
		{"id":"fae7ab7960ee8197","type":"text","text":"**Transform 属性**","x":646,"y":2200,"width":250,"height":60},
		{"id":"b72050dda8b3f824","type":"text","text":"**`SetActorLocation`设置Actor位置**","x":1211,"y":2200,"width":332,"height":60,"color":"1"},
		{"id":"cc43c14054fb0858","type":"text","text":"**`Set Timer by Function Name`以事件设置定时器(Type: TimerHandle)**\n\n* 参数列表:\n  * `Object`: 引用一个Object, \n  * `Function Name`: 输入Object 中的Function Name ,  等待TIme后将会被调用 \n  * `Time`: 输入浮点型, 具体为等待的时间. 当Time 小于等于 0 时, 事件不会被执行触发.\n  * `Looping`: 输入布尔值, 若为True, 则事件根据时间的间隔重复被调用.\n* 返回值:\n  * `Return Value`: 返回自身的引用. Type: `Timer Handle","x":1211,"y":1709,"width":557,"height":328,"color":"1"},
		{"id":"3ca307a99b4a26b5","type":"text","text":"**事件, 函数**","x":646,"y":1529,"width":250,"height":60},
		{"id":"e9cd22c245bb48ff","type":"text","text":"**调用**","x":998,"y":1529,"width":104,"height":60},
		{"id":"d493879ea6f77ce8","type":"text","text":"**`BluePrint`**","x":401,"y":1529,"width":150,"height":60},
		{"id":"b2b89f0ff9e70f04","type":"text","text":"**`Set Timer by Event`以事件设置定时器(Type: TimerHandle)**\n\n* 参数列表:\n  * `Event`: 引用一个事件, 这个时间将等待Time后被调用\n  * `Time`: 输入浮点型, 具体为等待的时间. 当Time 小于等于 0 时, 事件不会被执行触发.\n  * `Looping`: 输入布尔值, 若为True, 则事件根据时间的间隔重复被调用.\n* 返回值:\n  * `Return Value`: 返回自身的引用. Type: `Timer Handle","x":1211,"y":1231,"width":557,"height":328,"color":"1"},
		{"id":"099edd628cb77ec3","type":"text","text":"**`set Niagara Variable`设置niagara属性**\n\n- 作用:\n\t- 设置Niagara的属性 .\n\n- 参数列表:\n\t- `target`: 输入Niagara系统\n\t- `In Variable Name`: 输入需要被修改的属性名称\n\t- `In Value`: 输入修改后的数值.","x":1327,"y":960,"width":545,"height":186,"color":"1"},
		{"id":"283637899390fed0","type":"text","text":"**属性接口影响(注意, 只能影响User Exposed层级下的属性**","x":954,"y":1013,"width":280,"height":80},
		{"id":"bdd5a9b706a61efe","type":"text","text":"**`Deactivate`失活**\n\n- 作用：\n\t- 终止播放NiagaraSystem.\n\n- 参数列表:\n\t- `target`: 输入Niagara System, 函数被调用时令Niagara失活.","x":1327,"y":678,"width":508,"height":220,"color":"1"},
		{"id":"a60ff385c4c113ec","type":"text","text":"**`Activate`激活Niagara**\n\n- 作用 :\n\t- 播放NiagaraSystem\n\n- 参数列表:\n\t- `target`: 输入Niagara System, 函数被调用时激活函数.\n\t- `Reset`: 每次激活时均从头播放.","x":1327,"y":413,"width":508,"height":220,"color":"1"},
		{"id":"d11197509573b68b","type":"text","text":"**`DestroyComponent`扼杀粒子**\n\n- 作用:\n\t- 扼杀Niagara系统 .\n\n- 参数列表:\n\t- `target`: 输入Niagara System, 函数被调用时扼杀Niagara.","x":1872,"y":413,"width":508,"height":220,"color":"1"},
		{"id":"47cf482fa90c444d","type":"text","text":"**`Niagara`尼日加拉组件**\n\n- `Derails`:\n\t- `Activation`\n\t\t- `Auto Activate`: 放置场景中自动激活 .","x":360,"y":420,"width":452,"height":205},
		{"id":"77ff6c879e0ef8c3","type":"text","text":"**`激活/扼杀/失活函数`**","x":940,"y":493,"width":250,"height":60},
		{"id":"3eebf35ecf035fd7","type":"text","text":"**容器与组件**","x":-80,"y":420,"width":250,"height":60},
		{"id":"c44d663704d5c7a9","type":"text","text":"**`Soawn System at Location`基于Location生成Niagara**\n\n- 参数列表 :\n\t- `System Template`: 输入生成的Niagara .\n\t- `Lo, Ro, Sc`: 输入变换 .","x":1287,"y":142,"width":508,"height":198,"color":"1"},
		{"id":"40df0ced68d2e6eb","type":"text","text":"**`Spawn`生成Niagara**","x":940,"y":211,"width":250,"height":60},
		{"id":"7f9ad319ee8c03bb","type":"text","text":"**`Clamp`钳制**\n\n**1. 作用 :**\n\n* 将数值限制在指定的最小值和最大值之间\n* `矢量`: 将其每个分量钳制在数值之内","x":641,"y":-398,"width":457,"height":156,"color":"1"},
		{"id":"915303eeb1c69a08","type":"text","text":"**`Random Unit Vector`随机单位向量**\n- 作用 :\n\t- 随机输出单位向量 .","x":1163,"y":-360,"width":556,"height":118,"color":"1"},
		{"id":"c0b7af0b900b93e6","type":"text","text":"`Find Look At Rotation`计算一个位置到另一个位置的旋转\n\n**1. 作用 :**\n\n* 计算向量间的角度, 输出旋转变换. 此旋转变换可以直接令`Start` 转向 `Target`\n\n**2. 参数列表 :**\n\n* `Start`: 需要被旋转的向量\n* `Target`: 转向的向量","x":1162,"y":-729,"width":557,"height":331,"color":"1"},
		{"id":"7e2472bd330bdb9d","type":"text","text":"**`Abs`取绝对值**\n**1. 作用 :**\n\n- `浮点型/整形`: 返回浮点型/整形绝对值\n- `矢量`: 返回矢量, 由每个分量的绝对值组成.","x":640,"y":-612,"width":458,"height":165,"color":"1"},
		{"id":"bbe59f766466c837","type":"text","text":"6.1.2.7 `Map Range Clamped`线性插值范围钳制\n\n**一. 作用 :**\n\n- 输入数值 ,  并输入数值值域 ,  根据数值在值域中的大小线性输出两个输出值的大小 ,  类似Lerp .","x":1785,"y":-612,"width":651,"height":148,"color":"1"},
		{"id":"d96c616d3a8549a0","type":"text","text":"**`Lerp`线性插值**\n\n- 作用 :\n\t- 进行线性插值运算 :  `(A * (1 - C)) + (B * C)`\n- 参数列表 :\n\t- 参数列表 :  A , B , Alpha .  当AB输入矢量时 ,  Alpha可以输入矢量(参数分量分别进行Lerp运算) ,  也可以输入常量(使用常量分别进行Lerp运算 .)","x":640,"y":-952,"width":458,"height":307,"color":"1"},
		{"id":"7cdb12024c937d82","type":"text","text":"**`Random Unit Vector in Cone in Degress`圆锥内随机单位向量**\n\n- 作用 :\n\t- 根据一个固定的单位矢量 ,  随机输出一个旋转固定角度的其他矢量 .  由于形似圆锥 ,  名为圆锥内随机单位向量.\n\n- 参数列表 :\n\t- `Cone Dir`: 输入固定轴向 .\n\t- `Cone Half Angle in Degress`: 输入角度","x":1780,"y":-952,"width":660,"height":292,"color":"1"},
		{"id":"f6a795d96c16154f","type":"text","text":"**`Random Float in Range`生成最大值与最小值之间的随机浮点型**\n\n**1. 作用 :**\n\n* 生成给定最大值与最小值中一个随机的浮点型. \n","x":1162,"y":-952,"width":557,"height":161,"color":"1"},
		{"id":"fa69d668b3a6040a","type":"text","text":"**`Kismet`数学函数库**","x":210,"y":-560,"width":250,"height":60},
		{"id":"956570b507a19241","type":"text","text":"**`数学运算`**","x":-10,"y":-560,"width":150,"height":60},
		{"id":"99c9db770c29040d","type":"text","text":"**`BluePrint`**","x":-305,"y":-117,"width":165,"height":137},
		{"id":"e79319e5b8f647fb","type":"text","text":"**`流程控制`**","x":15,"y":-1641,"width":145,"height":60},
		{"id":"111ee90452fc3e27","type":"text","text":"**`Delay`进程延迟**\n\n- 作用 :\n\t- 将进程暂停一段时间后继续运行 .","x":300,"y":-1837,"width":400,"height":137},
		{"id":"4901da0b5b5c0998","type":"text","text":"debug","x":701,"y":3805,"width":119,"height":60},
		{"id":"7131b8461a6ec436","type":"text","text":"其他","x":698,"y":3902,"width":122,"height":60},
		{"id":"3a45f3156026116e","type":"text","text":"`Draw Debug`调试且绘制形状\n","x":923,"y":3720,"width":297,"height":60,"color":"1"},
		{"id":"c1752b61bf2e3f26","type":"text","text":"`Cast To XXX`将Type视为确定类\n**一. 使用方法 :**\n\n**1. 节点作用 :**\n- 将未确定的类型视为确定类型 .\n\n**2. 使用技巧 :**\n- 可以右键此选项, `Convert to inpure cast`视为宏 .","x":923,"y":3813,"width":361,"height":238,"color":"1"},
		{"id":"939d3fc3e932f762","type":"text","text":"`Deactivate`停用\n**一. 使用方法 :**\n\n**1. 节点作用 :**\n- **用（禁用）某个 Actor 或组件**，使其暂时不再参与游戏逻辑、渲染或物理模拟.\n- 使用节点`Activate`可重新启用 .","x":923,"y":4080,"width":361,"height":260,"color":"1"},
		{"id":"eee21c54257ddc4b","type":"text","text":"`Set Visibility`设置可见性\n","x":923,"y":4380,"width":361,"height":60,"color":"1"},
		{"id":"76a6171d093a75a5","type":"text","text":"`Retriggerable Delay`可重置Delay","x":1340,"y":3813,"width":360,"height":60,"color":"1"},
		{"id":"2baa39c6cf17da5e","type":"text","text":"Function","x":349,"y":3909,"width":171,"height":60},
		{"id":"feb7c24375c21eb0","type":"text","text":"`LineTraceByChannel`射线检测","x":588,"y":4817,"width":335,"height":72,"color":"1"},
		{"id":"59d8a731b6b4366e","type":"text","text":"碰撞","x":355,"y":4823,"width":165,"height":60,"color":"5"},
		{"id":"2f2ed104868e7e86","type":"text","text":"`MultiSphereTraceForObject`","x":585,"y":4943,"width":338,"height":60,"color":"1"},
		{"id":"db6f9fcc5656863c","x":1340,"y":3902,"width":400,"height":478,"color":"1","type":"text","text":"`AttachActorToActor`将对象移动至对象上\n**一. 使用方法 :**\n\n**1. 参数列表 :**\n- `Target`:  被移动的物体;\n- `Parent Actor`:  跟随移动的父级物体.\n- `Rule`:\n\t- `Keep Relative`:  保持相对位置, 被移动物体的坐标直接与`Parent Actor`相加 ;\n\t- `Keep World`: 保持世界位置, 子 Actor 在世界空间中的位置、旋转和缩放看起来不会改变, 但实际上它的变换已经被转换为相对于父 Actor 的局部空间表示.\n\t- `Snap to Target`:  将被变换物体的坐标直接赋值为父级坐标.\n- `SocketName`: 选择跟随物体的骨骼 .\n\n\n"}
	],
	"edges":[
		{"id":"574c4a28713c00a5","fromNode":"99c9db770c29040d","fromSide":"right","toNode":"3eebf35ecf035fd7","toSide":"left"},
		{"id":"18abddfcf6dd0956","fromNode":"3eebf35ecf035fd7","fromSide":"right","toNode":"47cf482fa90c444d","toSide":"left"},
		{"id":"22ee7d17da54400b","fromNode":"47cf482fa90c444d","fromSide":"right","toNode":"40df0ced68d2e6eb","toSide":"left"},
		{"id":"3a5a4dc9e4a60054","fromNode":"40df0ced68d2e6eb","fromSide":"right","toNode":"c44d663704d5c7a9","toSide":"left"},
		{"id":"5f3e28792d1964b0","fromNode":"99c9db770c29040d","fromSide":"right","toNode":"956570b507a19241","toSide":"left"},
		{"id":"b1e7c3a019944b5b","fromNode":"956570b507a19241","fromSide":"right","toNode":"fa69d668b3a6040a","toSide":"left"},
		{"id":"6aa56d242ecbf048","fromNode":"fa69d668b3a6040a","fromSide":"right","toNode":"d96c616d3a8549a0","toSide":"left"},
		{"id":"6cd495a10a2dcd19","fromNode":"fa69d668b3a6040a","fromSide":"right","toNode":"7e2472bd330bdb9d","toSide":"left"},
		{"id":"44aec10e243ca10d","fromNode":"fa69d668b3a6040a","fromSide":"right","toNode":"7f9ad319ee8c03bb","toSide":"left"},
		{"id":"977a27e706186810","fromNode":"fa69d668b3a6040a","fromSide":"right","toNode":"f6a795d96c16154f","toSide":"left"},
		{"id":"4a7e3b8a89d12163","fromNode":"fa69d668b3a6040a","fromSide":"right","toNode":"c0b7af0b900b93e6","toSide":"left"},
		{"id":"7ad8a6c75f5f2017","fromNode":"3eebf35ecf035fd7","fromSide":"right","toNode":"d493879ea6f77ce8","toSide":"left"},
		{"id":"26e4171a5fd60d41","fromNode":"d493879ea6f77ce8","fromSide":"right","toNode":"3ca307a99b4a26b5","toSide":"left"},
		{"id":"b9099c0982d4d0d1","fromNode":"3ca307a99b4a26b5","fromSide":"right","toNode":"e9cd22c245bb48ff","toSide":"left"},
		{"id":"11f887114c527adb","fromNode":"e9cd22c245bb48ff","fromSide":"right","toNode":"b2b89f0ff9e70f04","toSide":"left"},
		{"id":"382bb0c4f2f2aca0","fromNode":"e9cd22c245bb48ff","fromSide":"right","toNode":"cc43c14054fb0858","toSide":"left"},
		{"id":"d1aa0dec5be01a29","fromNode":"99c9db770c29040d","fromSide":"right","toNode":"e79319e5b8f647fb","toSide":"left"},
		{"id":"785ea87657857484","fromNode":"e79319e5b8f647fb","fromSide":"right","toNode":"111ee90452fc3e27","toSide":"left"},
		{"id":"341a3fdd4f46a227","fromNode":"47cf482fa90c444d","fromSide":"right","toNode":"77ff6c879e0ef8c3","toSide":"left"},
		{"id":"b296ab6ced584238","fromNode":"77ff6c879e0ef8c3","fromSide":"right","toNode":"a60ff385c4c113ec","toSide":"left"},
		{"id":"e00dfd0c86ca665c","fromNode":"77ff6c879e0ef8c3","fromSide":"right","toNode":"bdd5a9b706a61efe","toSide":"left"},
		{"id":"11cfcb7cbab64613","fromNode":"47cf482fa90c444d","fromSide":"right","toNode":"283637899390fed0","toSide":"left"},
		{"id":"28e082c88fcd46b0","fromNode":"283637899390fed0","fromSide":"right","toNode":"099edd628cb77ec3","toSide":"left"},
		{"id":"cfa83f1ff04bd009","fromNode":"77ff6c879e0ef8c3","fromSide":"right","toNode":"d11197509573b68b","toSide":"left"},
		{"id":"a1caa2576cdc4bcf","fromNode":"fa69d668b3a6040a","fromSide":"right","toNode":"915303eeb1c69a08","toSide":"left"},
		{"id":"68a6d61d5a0234b1","fromNode":"fa69d668b3a6040a","fromSide":"right","toNode":"7cdb12024c937d82","toSide":"left"},
		{"id":"3b398772b89bc9a6","fromNode":"d493879ea6f77ce8","fromSide":"right","toNode":"fae7ab7960ee8197","toSide":"left"},
		{"id":"f16f0694b28487a1","fromNode":"fae7ab7960ee8197","fromSide":"right","toNode":"b72050dda8b3f824","toSide":"left"},
		{"id":"2b6a28e1add0f5c5","fromNode":"fa69d668b3a6040a","fromSide":"right","toNode":"bbe59f766466c837","toSide":"left"},
		{"id":"c4348608dc72f926","fromNode":"d493879ea6f77ce8","fromSide":"right","toNode":"056ac6ab6b839fe2","toSide":"left"},
		{"id":"cedfd2490d192be2","fromNode":"056ac6ab6b839fe2","fromSide":"right","toNode":"3f1a306cf9bb1eb4","toSide":"left"},
		{"id":"157a23467bca7571","fromNode":"056ac6ab6b839fe2","fromSide":"right","toNode":"3c3333dde0739f85","toSide":"left"},
		{"id":"075e0d2cc9152578","fromNode":"056ac6ab6b839fe2","fromSide":"right","toNode":"3e4bac57b075e671","toSide":"left"},
		{"id":"3c30e63a6dc70074","fromNode":"056ac6ab6b839fe2","fromSide":"right","toNode":"01f98db2af9adda9","toSide":"left"},
		{"id":"179b0dc6ae853857","fromNode":"3eebf35ecf035fd7","fromSide":"right","toNode":"2baa39c6cf17da5e","toSide":"left"},
		{"id":"d98f7e0a03f63b7a","fromNode":"2baa39c6cf17da5e","fromSide":"right","toNode":"4901da0b5b5c0998","toSide":"left"},
		{"id":"932599cd80fa6b99","fromNode":"4901da0b5b5c0998","fromSide":"right","toNode":"3a45f3156026116e","toSide":"left"},
		{"id":"b0cd0d5e9ac8a35e","fromNode":"2baa39c6cf17da5e","fromSide":"right","toNode":"7131b8461a6ec436","toSide":"left"},
		{"id":"b8947eaac9217488","fromNode":"7131b8461a6ec436","fromSide":"right","toNode":"c1752b61bf2e3f26","toSide":"left"},
		{"id":"d8fb34f3fbe91995","fromNode":"7131b8461a6ec436","fromSide":"right","toNode":"939d3fc3e932f762","toSide":"left"},
		{"id":"0ce2389ec1ac8848","fromNode":"7131b8461a6ec436","fromSide":"right","toNode":"eee21c54257ddc4b","toSide":"left"},
		{"id":"abc918f6fe40dca9","fromNode":"3eebf35ecf035fd7","fromSide":"right","toNode":"59d8a731b6b4366e","toSide":"left"},
		{"id":"9251bf9242446b6e","fromNode":"59d8a731b6b4366e","fromSide":"right","toNode":"feb7c24375c21eb0","toSide":"left"},
		{"id":"95ca66a828ae8c91","fromNode":"59d8a731b6b4366e","fromSide":"right","toNode":"2f2ed104868e7e86","toSide":"left"},
		{"id":"e6db6c3223727246","fromNode":"7131b8461a6ec436","fromSide":"right","toNode":"76a6171d093a75a5","toSide":"left"},
		{"id":"620b88eb6a1d1c4a","fromNode":"7131b8461a6ec436","fromSide":"right","toNode":"db6f9fcc5656863c","toSide":"left"}
	]
}